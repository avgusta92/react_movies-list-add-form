{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","defaultInputs","name","value","placeholder","error","errorMessage","firstTouch","findEmptyStr","input","findInputValue","inputs","find","NewMovie","state","disabledButton","handleChange","event","target","setState","handleSubmit","preventDefault","regex","RegExp","disabledButtonValue","match","filter","length","newMovie","props","addNewMovie","this","onSubmit","type","onChange","classNames","NewMovie__input","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3611fd11.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst defaultInputs = [\n  {\n    name: 'title',\n    value: '',\n    placeholder: 'Title name',\n    error: false,\n    errorMessage: 'Please enter the title',\n    firstTouch: false,\n  },\n  {\n    name: 'imgUrl',\n    value: '',\n    placeholder: 'Url for image',\n    error: false,\n    errorMessage: 'Please enter url for image',\n    firstTouch: false,\n  },\n  {\n    name: 'imdbUrl',\n    value: '',\n    placeholder: 'Url for imdb',\n    error: false,\n    errorMessage: 'Please enter url for imdb',\n    firstTouch: false,\n  },\n  {\n    name: 'imdbId',\n    value: '',\n    placeholder: 'Id for imdb',\n    error: false,\n    errorMessage: 'Please enter Id for imdb',\n    firstTouch: false,\n  },\n  {\n    name: 'description',\n    value: '',\n    placeholder: 'Description',\n  },\n];\n\nconst findEmptyStr = (input) => {\n  return input.name !== 'description' && input.value === '';\n};\n\nconst findInputValue = (inputs, name) => {\n  return inputs.find(input => input.name === name).value;\n};\n\nexport class NewMovie extends Component {\n  state = {\n    inputs: defaultInputs,\n    disabledButton: true,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState((state) => {\n      const newInputs = state.inputs.map((input) => {\n        return input.name === name\n          ? {\n            ...input,\n            value,\n            error: false,\n          }\n          : {\n            ...input,\n            error: false,\n          };\n      });\n\n      return {\n        inputs: newInputs,\n      };\n    });\n\n    this.setState({ disabledButton: false });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n      // eslint-disable-next-line max-len\n      const regex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n      let disabledButtonValue = false;\n\n      const newInputs = state.inputs.map((input) => {\n        if (input.value === ''\n          || (input.name === 'imgUrl' && !input.value.match(regex))\n          || (input.value.name === 'imdbUrl' && !input.match(regex))) {\n          disabledButtonValue = true;\n\n          return {\n            ...input, error: true,\n          };\n        }\n\n        return input;\n      });\n\n      return {\n        inputs: newInputs,\n        disabledButton: disabledButtonValue,\n      };\n    });\n\n    const { inputs } = this.state;\n\n    if (inputs.filter(findEmptyStr).length > 0) {\n      return;\n    }\n\n    const newMovie = {\n      title: findInputValue(inputs, 'title'),\n      imgUrl: findInputValue(inputs, 'imgUrl'),\n      imdbUrl: findInputValue(inputs, 'imdbUrl'),\n      imdbId: findInputValue(inputs, 'imdbId'),\n      description: findInputValue(inputs, 'description'),\n    };\n\n    this.props.addNewMovie(newMovie);\n\n    this.setState({\n      inputs: defaultInputs,\n    });\n  };\n\n  render() {\n    const { inputs, disabledButton } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={this.handleSubmit}\n      >\n        {inputs.map((input) => {\n          return input.name === 'description'\n            ? (\n              <textarea\n                key={input.name}\n                type=\"text\"\n                name={input.name}\n                placeholder={input.placeholder}\n                value={input.description}\n                onChange={this.handleChange}\n              />\n            ) : (\n              <div key={input.name}>\n                <input\n                  className={classNames({\n                    NewMovie__input: true,\n                    'NewMovie__input--error': input.error,\n                  })}\n                  type=\"text\"\n                  name={input.name}\n                  placeholder={input.placeholder}\n                  value={input.value}\n                  onChange={this.handleChange}\n                />\n                <p className={classNames({\n                  error: true,\n                  'error--displayed': input.error,\n                })}\n                >\n                  Please enter the title\n                </p>\n              </div>\n            );\n        })}\n\n        <button\n          disabled={disabledButton}\n          className=\"NewMovie__button\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addNewMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}